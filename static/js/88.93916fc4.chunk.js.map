{"version":3,"file":"static/js/88.93916fc4.chunk.js","mappings":"2PACA,EAAuB,2BAAvB,EAAyD,2BAAzD,EAA6F,6B,SCG7F,SAASA,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QAChBC,EAAWD,EAAQE,KAAI,SAAAC,GAAE,OAC7B,gBAAgBC,UAAWC,EAA3B,WACE,gBAAID,UAAWC,EAAf,qBAAkCF,EAAGG,WACrC,uBAAIH,EAAGI,YAFAJ,EAAGK,OAKd,OACE,8BAAGC,QAAQT,EAAQU,UAAW,eAAIN,UAAWC,EAAf,SAAwBJ,MAI1D,QAEAF,EAAaY,aAAe,CAC1BX,QAAS,I,cCgCX,MA5CA,WACE,OAAsCY,EAAAA,EAAAA,UAAS,CAC7CZ,QAAS,GACTa,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAoBC,EAApB,KAKQR,GAAOS,EAAAA,EAAAA,MAAPT,IAERU,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,2FACnBH,GAAe,SAAAI,GAAI,yBACdA,GADc,IAEjBP,SAAS,OAHQ,mBAMEQ,EAAAA,EAAAA,IAAkBb,GANpB,OAMXc,EANW,OAQjBN,GAAe,SAAAI,GAAI,yBACdA,GADc,IAEjBP,SAAS,EACTb,QAASsB,EAAKC,aAXC,gDAcjBP,GAAe,SAAAI,GAAI,yBACdA,GADc,IAEjBP,SAAS,EACTC,MAAO,KAAIU,aAjBI,yDAAH,qDAqBlBL,EAAaX,KACZ,CAACA,IAEJ,IAAQR,EAA4Be,EAA5Bf,QAASa,EAAmBE,EAAnBF,QAASC,EAAUC,EAAVD,MAE1B,OACE,gCACGD,IAAW,uCACZ,SAAC,EAAD,CAAcb,QAASA,IACtBc,IAAS,uBAAIA,S,iMC5CdW,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAa,mCAAG,sGACJL,EAASM,IAAI,oBAAqB,CACvDH,OAAQ,CACNI,KAAM,KAHiB,uBACnBV,EADmB,EACnBA,KADmB,kBAOpBA,GAPoB,2CAAH,qDAUbW,EAAc,mCAAG,WAAMzB,GAAN,yFACLiB,EAASM,IAAT,iBAAuBvB,IADlB,uBACpBc,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdY,EAAc,mCAAG,WAAM1B,GAAN,yFACLiB,EAASM,IAAT,iBAAuBvB,EAAvB,aADK,uBACpBc,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdD,EAAiB,mCAAG,WAAMb,GAAN,yFACRiB,EAASM,IAAT,iBAAuBvB,EAAvB,aADQ,uBACvBc,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBa,EAAgB,mCAAG,WAAMC,GAAN,yFACPX,EAASM,IAAT,gBAA8B,CACnDH,OAAQ,CACNQ,MAAAA,KAH0B,uBACtBd,EADsB,EACtBA,KADsB,kBAMvBA,GANuB,2CAAH","sources":["webpack://react-homework-template/./src/components/Reviews/ReviewsItems/reviewsItems.module.css?1602","components/Reviews/ReviewsItems/ReviewsItems.jsx","components/Reviews/Reviews.jsx","shared/services/moviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"reviewsItems_list__xppGc\",\"item\":\"reviewsItems_item__yQDQt\",\"author\":\"reviewsItems_author__c0FaC\"};","import PropTypes from 'prop-types';\n\nimport s from './reviewsItems.module.css';\n\nfunction ReviewsItems({ reviews }) {\n  const elements = reviews.map(el => (\n    <li key={el.id} className={s.item}>\n      <h3 className={s.author}>Author: {el.author}</h3>\n      <p>{el.content}</p>\n    </li>\n  ));\n  return (\n    <>{Boolean(reviews.length) && <ul className={s.list}>{elements}</ul>}</>\n  );\n}\n\nexport default ReviewsItems;\n\nReviewsItems.dafaultProps = {\n  reviews: [],\n};\n\nReviewsItems.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport ReviewsItems from './ReviewsItems';\n\nimport { fetchMovieReviews } from 'shared/services/moviesAPI';\n\nfunction ReviewsPage() {\n  const [reviewsData, setReviewsData] = useState({\n    reviews: [],\n    loading: false,\n    error: null,\n  });\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      setReviewsData(prev => ({\n        ...prev,\n        loading: true,\n      }));\n      try {\n        const data = await fetchMovieReviews(id);\n\n        setReviewsData(prev => ({\n          ...prev,\n          loading: false,\n          reviews: data.results,\n        }));\n      } catch (err) {\n        setReviewsData(prev => ({\n          ...prev,\n          loading: false,\n          error: err.message,\n        }));\n      }\n    };\n    fetchReviews(id);\n  }, [id]);\n\n  const { reviews, loading, error } = reviewsData;\n\n  return (\n    <>\n      {loading && <p>...Loading</p>}\n      <ReviewsItems reviews={reviews} />\n      {error && <p>{error}</p>}\n    </>\n  );\n}\n\nexport default ReviewsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '473bf57b6e795f74966a4b9785ccc38f',\n  },\n});\n\nexport const fetchTrending = async () => {\n  const { data } = await instance.get('/trending/all/day', {\n    params: {\n      page: 1,\n    },\n  });\n\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nexport const fechMovieByQuery = async query => {\n  const { data } = await instance.get(`search/movie/`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n"],"names":["ReviewsItems","reviews","elements","map","el","className","s","author","content","id","Boolean","length","dafaultProps","useState","loading","error","reviewsData","setReviewsData","useParams","useEffect","fetchReviews","prev","fetchMovieReviews","data","results","message","instance","axios","baseURL","params","api_key","fetchTrending","get","page","fetchMovieById","fetchMovieCast","fechMovieByQuery","query"],"sourceRoot":""}