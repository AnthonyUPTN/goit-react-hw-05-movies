{"version":3,"file":"static/js/329.97776abb.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ListItems/listItems.module.css?c7ef","components/ListItems/ListItems.jsx","components/MoviesSearchForm/MoviesSearchForm.jsx","pages/MoviesPage/MoviesPage.jsx","shared/services/moviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"listItems_item__nlysi\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport s from './listItems.module.css';\n\nconst ListItems = ({ movies }) => {\n  const elements = movies.map(({ id, title, original_name }) => (\n    <li key={id} className={s.item}>\n      {title && <Link to={`/movies/${id}`}>{title}</Link>}\n      {!title && <Link to={`/movies/${id}`}>{original_name}</Link>}\n    </li>\n  ));\n  return <>{Boolean(movies.length) && <ul>{elements}</ul>}</>;\n};\n\nexport default ListItems;\n\nListItems.dafaultProps = {\n  movies: [],\n};\n\nListItems.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      original_name: PropTypes.string,\n    })\n  ),\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst MoviesSearchForm = ({ onSubmit }) => {\n  const [state, setState] = useState({\n    query: '',\n  });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ ...state });\n    setState({ query: '' });\n  };\n\n  return (\n    <>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <input\n          value={state.query}\n          name=\"query\"\n          onChange={handleChange}\n          type=\"text\"\n          placeholder=\"Movie\"\n        />\n        <button>Search</button>\n      </form>\n    </>\n  );\n};\n\nexport default MoviesSearchForm;\n\nMoviesSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport ListItems from 'components/ListItems';\nimport MoviesSearchForm from 'components/MoviesSearchForm';\n\nimport { fechMovieByQuery } from 'shared/services/moviesAPI';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const onSubmit = ({ query }) => setSearchParams({ query });\n  const q = searchParams.get('query');\n\n  useEffect(() => {\n    const searchMovies = async () => {\n      setMovies(prev => ({ ...prev, loading: true }));\n      try {\n        const result = await fechMovieByQuery(q);\n        console.log(result.results);\n        setMovies(prev => ({\n          ...prev,\n          loading: false,\n          items: result.results,\n        }));\n      } catch (err) {\n        setMovies(prev => ({\n          ...prev,\n          loading: false,\n          error: err.message,\n        }));\n      }\n    };\n    if (q) {\n      searchMovies();\n    }\n  }, [q]);\n\n  const { items, loading, error } = movies;\n\n  return (\n    <>\n      <MoviesSearchForm onSubmit={onSubmit} />\n      {loading && <p>Loading...</p>}\n      <ListItems movies={items} />\n      {error && <p>{error}</p>}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '473bf57b6e795f74966a4b9785ccc38f',\n  },\n});\n\nexport const fetchTrending = async () => {\n  const { data } = await instance.get('/trending/all/day', {\n    params: {\n      page: 1,\n    },\n  });\n\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nexport const fechMovieByQuery = async query => {\n  const { data } = await instance.get(`search/movie/`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n"],"names":["ListItems","movies","elements","map","id","title","original_name","className","s","to","Boolean","length","dafaultProps","onSubmit","useState","query","state","setState","action","event","preventDefault","value","name","onChange","target","prevState","type","placeholder","items","loading","error","setMovies","useSearchParams","searchParams","setSearchParams","q","get","useEffect","searchMovies","prev","fechMovieByQuery","result","console","log","results","message","instance","axios","baseURL","params","api_key","fetchTrending","page","data","fetchMovieById","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}