{"version":3,"file":"static/js/281.bdb666ad.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetailsPage/movieDetailsPage.module.css?c394","pages/MovieDetailsPage/MovieDetailsPage.jsx","shared/services/moviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"goBack\":\"movieDetailsPage_goBack__gAebg\",\"wrapper\":\"movieDetailsPage_wrapper__kmPut\",\"about\":\"movieDetailsPage_about__vqkbY\",\"score\":\"movieDetailsPage_score__MK4dr\",\"overwiev\":\"movieDetailsPage_overwiev__QSdyG\",\"genresTitle\":\"movieDetailsPage_genresTitle__sJZRH\",\"genres\":\"movieDetailsPage_genres__LiaVf\",\"info\":\"movieDetailsPage_info__G9PsW\",\"links\":\"movieDetailsPage_links__AVOFn\",\"genresItem\":\"movieDetailsPage_genresItem__qaqEt\",\"link\":\"movieDetailsPage_link__ZHtlQ\"};","import { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate, Outlet } from 'react-router-dom';\n\nimport { fetchMovieById } from 'shared/services/moviesAPI';\n\nimport s from './movieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const [data, setData] = useState({\n    movie: {},\n    loading: false,\n    error: null,\n  });\n  const { id } = useParams();\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n  const navigate = useNavigate();\n  // const location = useLocation();\n  // const from = location?.state?.from || '/';\n\n  const goBack = () => navigate(-1);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      setData(prev => ({\n        ...prev,\n        loading: true,\n      }));\n      try {\n        const data = await fetchMovieById(id);\n        setData(prev => ({\n          ...prev,\n          movie: data,\n          loading: false,\n        }));\n      } catch (err) {\n        setData(prev => ({ ...prev, loading: false, error: err.message }));\n      }\n    };\n    fetchMovie();\n  }, [id]);\n\n  const { movie, loading, error } = data;\n\n  const { poster_path, title, vote_average, overview, genres } = movie;\n\n  return (\n    <>\n      <button className={s.goBack} onClick={goBack}>\n        &#8617; Go back\n      </button>\n      {loading && <p>...Loading</p>}\n      {movie && (\n        <>\n          <div className={s.wrapper}>\n            <img src={IMG_URL + poster_path} alt={title} className={s.img} />\n            <div className={s.about}>\n              <h2>{title}</h2>\n              <p className={s.score}> User score: {vote_average * 10}%</p>\n              <h3>Overview</h3>\n              <p className={s.overwiev}>{overview}</p>\n              <h3 className={s.genresTitle}>Genres</h3>\n              <p>\n                {genres &&\n                  genres.map(el => (\n                    <span className={s.genresItem} key={el.id}>\n                      {el.name}\n                    </span>\n                  ))}\n              </p>\n            </div>\n          </div>\n          <div className={s.links}>\n            <h3 className={s.info}>Aditional information</h3>\n            <Link className={s.link} to={`/movies/${id}/cast`}>\n              Cast\n            </Link>\n            <Link className={s.link} to={`/movies/${id}/reviews`}>\n              Reviews\n            </Link>\n          </div>\n          <div>\n            <Outlet />\n          </div>\n        </>\n      )}\n      {error && <p>{error}</p>}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '473bf57b6e795f74966a4b9785ccc38f',\n  },\n});\n\nexport const fetchTrending = async () => {\n  const { data } = await instance.get('/trending/all/day', {\n    params: {\n      page: 1,\n    },\n  });\n\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nexport const fechMovieByQuery = async query => {\n  const { data } = await instance.get(`search/movie/`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n"],"names":["useState","movie","loading","error","data","setData","id","useParams","navigate","useNavigate","useEffect","fetchMovie","prev","fetchMovieById","message","poster_path","title","vote_average","overview","genres","className","s","onClick","src","alt","map","el","name","to","instance","axios","baseURL","params","api_key","fetchTrending","get","page","fetchMovieCast","fetchMovieReviews","fechMovieByQuery","query"],"sourceRoot":""}